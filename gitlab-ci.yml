image: docker:18-git

variables:
  REPOSITORY_URL: 606832048485.dkr.ecr.eu-west-1.amazonaws.com/innoscripta-devops-task-repo
  REGION: eu-west-1
  AWS_ACCESS_KEY_ID: "$AWS_KEY_ID"
  AWS_SECRET_ACCESS_KEY: "$AWS_KEY_SECRET"
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2

services:
  - docker:18-dind

before_script:
  - apk add --no-cache curl jq python py-pip
  - pip install awscli
  - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
  - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
  - aws configure set region $REGION
  - $(aws ecr get-login --no-include-email --region "${REGION}")
  - IMAGE_TAG="latest"

stages:
  - build
  - deploy

build:
  stage: build
  script:
    - echo "Building image..."
    - docker build -t $REPOSITORY_URL:latest .
    - echo "Tagging image..."
    - docker tag $REPOSITORY_URL:latest $REPOSITORY_URL:$IMAGE_TAG
    - echo "Pushing image..."
    - docker push $REPOSITORY_URL:$IMAGE_TAG

deploy:
  stage: deploy
  image: dtzar/helm-kubectl
  variables:
    AWS_ACCESS_KEY_ID: "$AWS_KEY_ID"
    AWS_SECRET_ACCESS_KEY: "$AWS_KEY_SECRET"
    CERTIFICATE_AUTHORITY_DATA: "CERTIFICATE_AUTHORITY_DATA"
    SERVER: "$SERVER"
    USER_TOKEN: "$USER_TOKEN"
    REPOSITORY_URL: 606832048485.dkr.ecr.eu-west-1.amazonaws.com/innoscripta-devops-task-repo
  before_script:
    - apk add --no-cache curl jq python py-pip
    - pip install awscli
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws configure set region $REGION
    - aws eks --region "${REGION}" update-kubeconfig --name gitlab-ecr-ekscluster
  script:
    - kubectl config set-cluster k8s --server="${SERVER}"
    - kubectl config set clusters.k8s.certificate-authority-data ${CERTIFICATE_AUTHORITY_DATA}
    - kubectl config set-credentials gitlab --token="${USER_TOKEN}"
    - kubectl config set-context default --cluster=k8s --user=gitlab
    - kubectl config use-context default
    - kubectl run innoscripta-deployment --image=$REPOSITORY_URL:latest --port=8000 --replicas=2
    - kubectl get pods -o wide
